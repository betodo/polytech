/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2019-08-08 13:47:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mobile.Gongji;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.sql.*;
import useDB.UseDB_Gongji;
import java.io.*;

public final class Gongji_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("useDB.UseDB_Gongji");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- <!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\"> -->\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- </head><body></body></html> -->\r\n");
      out.write("\r\n");

	String loginOK = null;
	loginOK = (String) session.getAttribute("login_ok");	


	//날짜 출력 처리, 포맷부터 선언
	SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
	Calendar calt = Calendar.getInstance();

	// 값 받기
	String idTemp = request.getParameter("keyId");
	int id = Integer.parseInt(idTemp);

	//디비tkdyd
	UseDB_Gongji udbG = new UseDB_Gongji();

	//조회수 하나 올려줌(이 페이지 진입시)
	udbG.addViewcnt(udbG.selectOneGongji(id), id);

	//출력준비
	ResultSet rset = udbG.selectOneGongji(id);
	rset.next();

      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t<table id=\"basicTB\" width=\"100%\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th colspan=2>공지사항</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>번호</th>\r\n");
      out.write("\t\t\t<td class=\"td\">");
      out.print(rset.getInt(1));
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t<td class=\"td\">");
      out.print(rset.getString(2));
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>일자</th>\r\n");
      out.write("\t\t\t<td class=\"td\">");
      out.print(rset.getString(3));
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>조회수</th>\r\n");
      out.write("\t\t\t<td class=\"td\">");
      out.print(rset.getString(7));
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>내용</th>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<td id=tdContent><div>");
      out.print(rset.getString(4));
      out.write("</div></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>파일1</th>\r\n");
      out.write("\t\t\t<!-- 신규등록시 이미지를 안올렸을때 -->\r\n");
      out.write("\t\t\t<td class=tdfile>\r\n");
      out.write("\t\t\t\t");

					String file1 = "";
					String file1Type = "";

					if (rset.getString(5)==null) {
						file1 = "파일 없음";
				
      out.write("\r\n");
      out.write("\t\t\t\t<div class=divFile>");
      out.print(file1);
      out.write("</div> ");

 	} else {
 		file1 = rset.getString(5).trim();
 		file1Type = file1.substring(file1.length() - 3, file1.length());

 		if (file1Type.equals("jpg") || file1Type.equals("png")) {
 
      out.write("\r\n");
      out.write("\t\t\t\t<div class=divFile style=\"display:inline\">\r\n");
      out.write("\t\t\t\t\t<a href=\"Gongji/upload/");
      out.print(file1);
      out.write("\" download>");
      out.print(file1);
      out.write("<img alt=\"\" src=\"img/save.png\"></a>\r\n");
      out.write("\t\t\t\t</div><img src=\"Gongji/upload/");
      out.print(file1);
      out.write("\" class=\"img-fluid\" alt=\"Responsive image\" style=\"max-width:20%\"> ");

 	} else {
 
      out.write("\r\n");
      out.write("\t\t\t\t<div class=divFile>\r\n");
      out.write("\t\t\t\t\t<a href=\"Gongji/upload/");
      out.print(file1);
      out.write("\" download>");
      out.print(file1);
      out.write("<img alt=\"\" src=\"img/save.png\"></a>\r\n");
      out.write("\t\t\t\t</div> ");

 	}
 	}
 
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>파일2</th>\r\n");
      out.write("\t\t\t<td class=tdfile>\r\n");
      out.write("\t\t\t\t");

					String file2 = "";
					String file2Type = "";

					if (rset.getString(6) == null) {
						file2 = "파일 없음";
				
      out.write("\r\n");
      out.write("\t\t\t\t<div class=divFile>");
      out.print(file2);
      out.write("</div> ");

 	} else {
 		file2 = rset.getString(6).trim();
 		file2Type = file2.substring(file2.length() - 3, file2.length());

 		if (file2Type.equals("jpg") || file2Type.equals("png")) {
 
      out.write("\r\n");
      out.write("\t\t\t\t<div class=divFile style=\"display:inline\">\r\n");
      out.write("\t\t\t\t\t<a href=\"Gongji/upload/");
      out.print(file2);
      out.write("\" download>");
      out.print(file2);
      out.write("<img alt=\"\" src=\"img/save.png\"></a>\r\n");
      out.write("\t\t\t\t</div> <img src=\"Gongji/upload/");
      out.print(file2);
      out.write("\" style=\"max-width:20%\"> ");

 		} else {
 
      out.write("\r\n");
      out.write("\t\t\t\t<div class=divFile>\r\n");
      out.write("\t\t\t\t\t<a href=\"Gongji/upload/");
      out.print(file2);
      out.write("\" download>");
      out.print(file2);
      out.write("<img alt=\"\" src=\"img/save.png\"></a>\r\n");
      out.write("\t\t\t\t</div> ");

 		}
 	}
 
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<form method=\"POST\" style=\"width: 100%; text-align: right;\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"id\" value=");
      out.print(id);
      out.write(">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"file1\" value=");
      out.print(rset.getString(5));
      out.write(">\r\n");
      out.write("\t\t<!-- 뒤로가기 버튼과 수정 버튼 -->\r\n");
      out.write("\t\t<div id=divButton>\r\n");
      out.write("\t\t\t<span><input class=\"btn btn-success\" type=\"submit\" value=목록\r\n");
      out.write("\t\t\t\tformaction=\"?contentPage=Gongji/Gongji_list.jsp\"></span>\r\n");
 if( loginOK != null && loginOK.equals("yes") ){ 
      out.write("\r\n");
      out.write("\t\t\t<span><input class=\"btn btn-success\" type=\"submit\" value=수정\r\n");
      out.write("\t\t\t\tformaction=\"?contentPage=Gongji/Gongji_update.jsp\"></span>\r\n");
 }
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");

	rset.close();
	udbG.close();

      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
