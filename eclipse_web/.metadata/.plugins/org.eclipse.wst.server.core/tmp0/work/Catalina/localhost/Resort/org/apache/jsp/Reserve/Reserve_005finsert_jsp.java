/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2019-08-11 11:09:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Reserve;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Reserve_005finsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	//관리자페이지에서 접근했을때 값 받기
	String key = null;
	if (key == null) key = request.getParameter("key");
	else key = "";
	
	//out.print(key);
	
	//예약상황표에서 가능 예약일과 방 클릭시 값 받기
	request.setCharacterEncoding("UTF-8");
	String day = request.getParameter("day");
	String roomTemp = request.getParameter("room");
	int room = Integer.parseInt(roomTemp);
	
	// 방번호에 따른 이름
	String roomName ="";
	switch(room){  
		case 1: roomName = "vip룸"; break;
		case 2: roomName = "합리룸"; break;
		case 3: roomName = "일반룸"; break;
	}
	

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t//form 안에 버튼이 2개일때 처리 모드를 변수로 받아 다른 액션을 부여\r\n");
      out.write("\tfunction submitForm(mode) {\r\n");
      out.write("\t\t/* const fm = document.getElementById(\"fm\"); */\r\n");
      out.write("\t\t//예약버튼 클릭시\r\n");
      out.write("\t\tif (mode == 'write') {\r\n");
      out.write("\t\t\tconst name = document.getElementById('name');\r\n");
      out.write("\t\t\tconst phone_num = document.getElementById('phone_num');\r\n");
      out.write("\t\t\t\r\n");
      out.write("// \t\t\tconsole.log(name, room);\r\n");
      out.write("\r\n");
      out.write("\t\t\t//값이 널일때 잡음\r\n");
      out.write("\t\t\tif (name.value.trim() == \"\") {\r\n");
      out.write("\t\t\t\talert(\"이름을 입력해주세요\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t} \r\n");
      out.write("// \t\t\tif(phone_num.value.lenth>12){\r\n");
      out.write("// \t\t\t\talert(\"번호는 11자리 이내로\")\r\n");
      out.write("// \t\t\t\treturn;\r\n");
      out.write("// \t\t\t}\r\n");
      out.write("// \t\t\telse if (content.value.trim().length > 500) {\r\n");
      out.write("// \t\t\t\talert(\"글은 500자 이내\");\r\n");
      out.write("// \t\t\t\treturn;\r\n");
      out.write("// \t\t\t}\r\n");
      out.write("\t\t\t//action을 지정해준다 key는 관리자 권한으로 들어올때 필요한 변수\r\n");
      out.write("\t\t\tfm.action = \"?contentPage=Reserve/Reserve_write.jsp?key=");
      out.print(key );
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("\t\t//취소 버튼 클릭시 역시 관리자 권한으로 들어왔을때 구분을 위해 key존재\r\n");
      out.write("\t\t} else if (mode == 'cancle') {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(");
      out.print(key);
      out.write("=='adm'){\r\n");
      out.write("\t\t\t\tfm.action = \"?contentPage=Admin/adm_allview.jsp\";\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tfm.action = \"?contentPage=Reserve/Reserve_list.jsp\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//window.history.go(-1); \r\n");
      out.write("\t\t} \r\n");
      out.write("\t\t\tfm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t<!-- 여기서 입력받는 모든 값을 넘겨줘서 db쿼리에 사용 -->\r\n");
      out.write("\t<form method=\"POST\" id=fm>\r\n");
      out.write("\t\t<input type=\"hidden\" name=rsv_date value=\"");
      out.print(day );
      out.write("\"><!-- 예약일 -->\r\n");
      out.write("\t\t<table id=\"basicTB\" width=\"100%\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th colspan=2>예약글 작성</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>이름</th><!-- 예약자 -->\r\n");
      out.write("\t\t\t\t\t<td><input class=\"rsv_input\" type=\"text\" name=\"name\" id='name'\r\n");
      out.write("\t\t\t\t\t\tmaxlength=\"20\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>예약일자</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(day);
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>예약방</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(roomName );
      out.write("\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=room value=\"");
      out.print(room );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<!-- <select name=\"room\" id=\"room\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"\">방선택</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"1\">vip룸</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2\">일반룸</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"3\">합리룸</option>\r\n");
      out.write("\t\t\t\t\t</select> -->\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>주소</th>\r\n");
      out.write("\t\t\t\t\t<td><input class=\"rsv_input\" type=\"text\" name=\"addr\" id='addr'\r\n");
      out.write("\t\t\t\t\t\tmaxlength=\"100\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>전화번호</th>\r\n");
      out.write("\t\t\t\t\t<td><input class=\"rsv_input\" type=\"text\" name=\"phone_num\"\r\n");
      out.write("\t\t\t\t\t\tid='phone_num' maxlength=\"12\" onKeyup=\"this.value=this.value.replace(/[^0-9]/g,'');\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>입금자</th>\r\n");
      out.write("\t\t\t\t\t<td><input class=\"rsv_input\" type=\"text\" name=\"deposit\"\r\n");
      out.write("\t\t\t\t\t\tid='deposit' maxlength=\"20\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>전하실 말</th>\r\n");
      out.write("\t\t\t\t\t<td><textarea id=\"rsv_comment\" name=\"rsv_comment\" wrap=\"hard\"\r\n");
      out.write("\t\t\t\t\t\t\tmaxlength=\"200\" style=\"width: 100%;\"></textarea></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div id=\"divButton\" style=\"width: 100%; text-align: right;\">\r\n");
      out.write("\t\t\t<span><input class=\"btn btn-success\" type=\"button\" value=취소\r\n");
      out.write("\t\t\t\tid=cancle onclick='submitForm(\"cancle\")'></span> <span><input\r\n");
      out.write("\t\t\t\tclass=\"btn btn-success\" type=\"button\" value=예약 id=write\r\n");
      out.write("\t\t\t\tonclick='submitForm(\"write\")'></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
