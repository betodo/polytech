/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2019-08-08 08:36:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.sql.*;
import useDB.UseDB_Reserve;
import java.io.*;
import java.util.List;
import java.util.ArrayList;

public final class adm_005foneview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("useDB.UseDB_Reserve");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	//값받기(목록에서 클릭 했을 때 받아온 값)
	String rsv_date = request.getParameter("day");
	int room = Integer.parseInt(request.getParameter("room"));
	
	//수정에서 예약일과 방을 바꿀 경우 원래 값
	String OGrsv_date = request.getParameter("day");
	int OGroom = Integer.parseInt(request.getParameter("room"));
	
	boolean is_change_date_room = false; //날짜와 방을 바꿨는지 알기위한 변수 false면 날짜 방을 안 바꿨음

	//db연결 예약목록과 실제 db저장된 예약내용을 비교하기
	UseDB_Reserve udbR = new UseDB_Reserve();
	ResultSet rset = udbR.selectOneRsv(rsv_date, room);

	// 방번호에 따른 이름
	String roomName = "";
	switch (room) {
		case 1 :
			roomName = "vip룸";
			break;
		case 2 :
			roomName = "합리룸";
			break;
		case 3 :
			roomName = "일반룸";
			break;
	}

	rset.next();
	String name = rset.getString(1);
	String addr = rset.getString(4);
	String phone_num = rset.getString(5);
	String deposit_name = rset.getString(6);
	String comment = rset.getString(7);
	String write_date = rset.getString(8);
	int processing = rset.getInt(9);

	// 처리상태번호에 따른 이름
	String processingName = "";
	switch (processing) {
		case 1 :
			processingName = "예약완료";
			break;
		case 2 :
			processingName = "입금완료";
			break;
		case 3 :
			processingName = "환불요청";
			break;
	}

	//input date 날짜 시작 끝 구하기
	Calendar cal = Calendar.getInstance();
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	String startDate = sdf.format(cal.getTime());
	cal.add(cal.MONTH, +1);
	String endDate = sdf.format(cal.getTime());

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction submitForm(mode) {\r\n");
      out.write("\t\tif (mode == 'update') {//변경버튼 눌렀을때\r\n");
      out.write("\t\t\tconst name = document.getElementById('name');\r\n");
      out.write("\t\t\tconst rsvDate = document.getElementById('inputDate');\r\n");
      out.write("\t\t\tconst room = document.getElementById('inputRoom');\r\n");
      out.write("\t\t\tconst processing = document.getElementById('inputProcessing');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//최소 필요한 값이 널일때 잡음\r\n");
      out.write("\t\t\tif (name.value.trim() == \"\" || rsvDate.value.trim() == \"\" \r\n");
      out.write("\t\t\t\t\t|| room.value.trim() == \"\" || processing.value.trim() == \"\") {\r\n");
      out.write("\t\t\t\talert(\"값을 입력해주세요\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//기존의 예약일과 방을 바꿨을때를 알기위해\r\n");
      out.write("\t\t\tif(rsvDate.value.trim()=='");
      out.print(rsv_date);
      out.write("' && room.value.trim()==");
      out.print(room);
      out.write("){\r\n");
      out.write("\t\t\t\tfm.action = \"?contentPage=Admin/adm_update.jsp?change=false\";\r\n");
      out.write("\t\t\t}else {\r\n");
      out.write("\t\t\t\tfm.action = \"?contentPage=Admin/adm_update.jsp?change=true\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t} else if (mode == 'cancle') { //취소버튼 눌렀을때\r\n");
      out.write("\t\t\tfm.action = \"?contentPage=Admin/adm_allview.jsp\";\r\n");
      out.write("\r\n");
      out.write("\t\t} else if (mode == 'delete') { //삭제버튼 눌렀을때\r\n");
      out.write("\t\t\tconst rsvDate = document.getElementById('inputDate');\r\n");
      out.write("\t\t\tconst room = document.getElementById('inputRoom');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif (rsvDate.value.trim() == \"\" || room.value.trim() == \"\" ) {\r\n");
      out.write("\t\t\t\talert(\"값을 입력해주세요\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t//입력한 값과 기존의 클릭해서 받아온 값 비교\r\n");
      out.write("\t\t\tif(rsvDate.value.trim()!='");
      out.print(rsv_date);
      out.write("' || room.value.trim()!=");
      out.print(room);
      out.write("){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\talert(\"예약을 삭제할꺼면 예약일과 방을 바꾸지마세요\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfm.action = \"?contentPage=Admin/adm_delete.jsp\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t<form method=\"POST\" id=fm>\r\n");
      out.write("\t\t<input type=\"hidden\" name=OGrsv_date value=");
      out.print(OGrsv_date );
      out.write(">\r\n");
      out.write("\t\t<input type=\"hidden\" name=OGroom value=");
      out.print(OGroom );
      out.write(">\r\n");
      out.write("\t\t<table id=\"basicTB\" width=\"100%\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th colspan=2>예약 조회</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t\t\t<td><input class=\"rsv_input\" type=\"text\" name=\"name\" id='name'\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(name);
      out.write("\" maxlength=\"20\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>예약일자</th>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"date\" name=\"date\" id=\"inputDate\" \r\n");
      out.write("\t\t\t\t\tvalue=\"");
      out.print(rsv_date);
      out.write("\" min='");
      out.print(startDate );
      out.write("' max='");
      out.print(endDate );
      out.write("' > \r\n");
      out.write("\t\t\t\t\t\t오늘부터 한달 후 까지만 변경가능 합니다.</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>예약방</th>\r\n");
      out.write("\t\t\t\t\t<td><select name=\"room\" id=\"inputRoom\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(room);
      out.write('"');
      out.write('>');
      out.print(roomName );
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"1\">vip룸</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2\">일반룸</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"3\">합리룸</option>\r\n");
      out.write("\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>주소</th>\r\n");
      out.write("\t\t\t\t\t<td><input class=\"rsv_input\" type=\"text\" name=\"addr\" id='addr'\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(addr);
      out.write("\" maxlength=\"100\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>전화번호</th>\r\n");
      out.write("\t\t\t\t\t<td><input class=\"rsv_input\" type=\"text\" name=\"phone_num\" value=\"");
      out.print(phone_num);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\tid='phone_num' maxlength=\"12\" onKeyup=\"this.value=this.value.replace(/[^0-9]/g,'');\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>입금자</th>\r\n");
      out.write("\t\t\t\t\t<td><input class=\"rsv_input\" type=\"text\" name=\"deposit\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(deposit_name);
      out.write("\" id='deposit' maxlength=\"20\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>전하실 말</th>\r\n");
      out.write("\t\t\t\t\t<td><textarea id=\"rsv_comment\" name=\"rsv_comment\" wrap=\"hard\"\r\n");
      out.write("\t\t\t\t\t\t\tvalue=\"");
      out.print(comment);
      out.write("\"  maxlength=\"200\" style=\"width: 100%;\"></textarea></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>예약 작성일</th>\r\n");
      out.write("\t\t\t\t\t<td><input class=\"rsv_input\" type=\"date\" name=\"write_date\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(write_date);
      out.write("\" id='deposit'></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>예약 상황</th>\r\n");
      out.write("\t\t\t\t\t<td><select name=\"processing\" id=\"inputProcessing\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(processing);
      out.write('"');
      out.write('>');
      out.print(processingName );
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"1\">예약완료</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2\">입금완료</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"3\">환불요청</option>\r\n");
      out.write("\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<input type=\"hidden\" name=startDate value=");
      out.print(startDate );
      out.write(">\r\n");
      out.write("\t\t<input type=\"hidden\" name=endDate value=");
      out.print(endDate );
      out.write(">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<div id=\"divButton\" style=\"width: 100%; text-align: right;\">\r\n");
      out.write("\t\t\t<span><input class=\"btn btn-success\" type=\"button\" value=취소\r\n");
      out.write("\t\t\t\tid=cancle onclick='submitForm(\"cancle\")'></span>\r\n");
      out.write("\t\t\t<span><input\r\n");
      out.write("\t\t\t\tclass=\"btn btn-success\" type=\"button\" value=변경 id=write\r\n");
      out.write("\t\t\t\tonclick='submitForm(\"update\")'></span> \r\n");
      out.write("\t\t\t<span><input\r\n");
      out.write("\t\t\t\tclass=\"btn btn-success\" type=\"button\" value=삭제 id=write\r\n");
      out.write("\t\t\t\tonclick='submitForm(\"delete\")'></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");

	rset.close();
	udbR.close();

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
